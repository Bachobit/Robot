name: Create a new release

on:
  workflow_dispatch:
    inputs:
      superbuild_tag:
        description: 'The new robotology-superbuild tag(without the "v")'
        required: true
jobs:
  PrepareRelease:
    name: Create the ${{ github.event.inputs.superbuild_tag }} release
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Modify the yaml file
      run: |
        cd releases
        cp ./latest.releases.yaml ./${{ github.event.inputs.superbuild_tag }}.yaml

    - name: Configure Git
      run: |
        git config --global push.default upstream
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Commit and push the ${{ github.event.inputs.superbuild_tag }} yaml
      run: |
        git add .
        git commit -m "Copying latest.releases.yaml to ${{ github.event.inputs.superbuild_tag }}.yaml"
        git push

    - name: Prepare and push ${{ github.event.inputs.superbuild_tag }} branch
      run: |
        git checkout -b releases/${{ github.event.inputs.superbuild_tag }}
        sed -i -e 's/set(ROBOTOLOGY_PROJECT_TAGS_CUSTOM_FILE/set(ROBOTOLOGY_PROJECT_TAGS_CUSTOM_FILE "\${CMAKE_CURRENT_SOURCE_DIR}\/releases\/${{ github.event.inputs.superbuild_tag }}.yaml"/g' ./cmake/RobotologySuperbuildOptions.cmake
        sed -i -e 's/set(ROBOTOLOGY_PROJECT_TAGS "Stable"/set(ROBOTOLOGY_PROJECT_TAGS "Custom"/g' ./cmake/RobotologySuperbuildOptions.cmake
        git add .
        git commit -m "Updating RobotologySuperbuildOptions.cmake"
        sed -i -e 's/set(INSTALLER_VERSION "")/set(INSTALLER_VERSION ${{ github.event.inputs.superbuild_tag }})/g' ./packaging/windows/CMakeLists.txt
        git add .
        git commit -m "Updating packaging/windows/CMakeLists.txt"
        git push --set-upstream origin releases/${{ github.event.inputs.superbuild_tag }}

    - name: Create and push the ${{ github.event.inputs.superbuild_tag }} tag
      run: |
        git checkout releases/${{ github.event.inputs.superbuild_tag }}
        git reset --hard origin/releases/${{ github.event.inputs.superbuild_tag }}
        git tag v${{ github.event.inputs.superbuild_tag }}
        git push --tags

